# ----------------------
# Регулярные выражения |
# ----------------------

import re


re_examples = [                         # Все они - истинные, т.к.
    not re.match("a", "cat"),          # слово 'cat' не начинается с 'a'
    re.search("a", "cat"),             # В слове 'cat' есть 'a'
    not re.search("c", "dog"),         # В слове 'dog' нет 'c'.
    3 == len(re.split("[ab]", "carbs")),     # Разбить по а или b
                                             # на ['c', 'r', 's']
    "R-D-" == re.sub("[0-9]", "-", "R2D2")   # Заменить цифры дефисами
]

assert all(re_examples), "Все примеры регулярных выражений дожны быть истинными"

# Есть одна выжная деталь, которую стоит отметить, - функция re.match проверяет,
# соответствует ли начало строкового значения регулярному выражению, в то время
# как функция re.search проверяет, соответствует ли какая-либо часть строкового
# значения регулярному выражению. В какой-то момент вы можете их перепутать,
# и это доставит вам массу неприятностей.

# Официальная документация (https://docs.python.org/3/library/re.html) дает
# гораздо более подробную информацию
