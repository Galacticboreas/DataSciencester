# -----------
# Сортировка |
# -----------

x = [4, 1, 2, 3]
y = sorted(x)       # y равно [1, 2, 3, 4], x остался без изменений
x.sort()            # Теперь х равен [1, 2, 3, 4]

# Сортировать список по абсолютному значению в убывающем порядке

x = sorted([-4, 1, -2, 3], key=abs, reverse=True)   # равно [-4, 3, -2, 1]

# Сортировать слова и их количества появлений
# по убывающему значению количества

word_counts = {}

ws = sorted(word_counts.items(),
            key=lambda word_and_count: word_and_count[1],
            reverse=True)

# Включения в список
# Нередко бывает необходимо преобразовать некий список в другой, выбирая 
# только определенные элементы, или внося по ходу изменения в элементы 
# исходного списка, или выполняя и то и другое одновременно. Python'овским 
# решением явлеяется применение операции включения в список:

# Четные числа
even_numbers = [x for x in range(5) if x % 2 == 0]   # [0, 2, 4]
# Квадраты чисел
squares = [x * x for x in range(5)]                   # [0, 1, 4, 9, 16]
# Квадраты четных чисел
even_squares = [x * x for x in even_numbers]          # [0, 4, 16]

# Списки можно преобразовать в словари dict или множества set
# аналоничным образом:

# Словарь с квадратами чисел
square_dict = {x : x * x for x in range(5)} # {0:0, 1:1, 2:4, 3:9, 4:16}
# Множества с квадратами чисел
square_set = { x * x for x in [1, -1]}      # { 1 }

# Если значение с списке не нужно, то обычно в качестве переменной
# используется символ подчеркивания:

zeroes = [0 for _ in even_numbers] # Имеет ту же длину, что и even_numbers

# Операция включения в список может содержать несколько инструкций for:

pairs = [(x, y)
        for x in range(10)
        for y in range(10)]   # 100 пар (0,0) (0,1) ... (9,8), (9,9)
    
# И последующие инструкции for могут использовать результаты предыдущих:

# Пары с возрастающим значением
increasing_pairs = [(x, y)                      # Только пары с x < y,
                    for x in range(10)          # range(мин, макс) равен
                    for y in range(x + 1, 10)]  # [мин, мин+1, ..., макс-1]
