# ------------------------
# Визуализация данных    |
# Бибилиотека matplotlib |
# ------------------------

# Установка python -m pip install matplotlib

# Мы будем пользоваться модулем matplotlib.pyplot. В самом простом случае
# pyplot поддерживает внутреннее состояние, в котором вы выстраиваете
# визуализацию шаг за шагом. Когда она завершена, изображение можно сохранить
# в файл при помощи метода savefig или вывести на экран методом show.

# Например, достаточно легко создать простой график:
from matplotlib import pyplot as plt

years = [1950, 1960, 1970, 1980, 1990, 2000, 2010]               # Годы
gdp = [300.2, 543.3, 1075.9, 2862.5, 5979.6, 10289.7, 14958.3]   # ВВП

# Создать линейную диаграмму: годы по оси х, ВВП по оси у
plt.plot(years, gdp, color='green', marker='o', linestyle='solid')

# Добавить название диаграммы
plt.title("Номинальный ВВП")

# Добавить подпись к оси у
plt.ylabel("Млрд $")
plt.show()

# Столбчатые графики

# Столбчатые графики хорошо подходят для тех случаев, когда требуется показать
# варьируемость некоторой величины среди некоего дискретного множества элементов.
# Например, сколько ежегодных премий "Оскар" Американской киноакадемии было
# завоевано каждым из перечисленных фильмов:
movies = ["Энни Холл", "Бен-Гур", "Касабланка", "Ганди", "Вестсайдская история"]
num_oscars = [5, 11, 3, 8, 10]

# Построить стобцы с левыми Х-координатами [xs] и высотами [num_oscars]
plt.bar(range(len(movies)), num_oscars)
plt.title("Мои любимые фильмы")    # Добавить заголовок
plt.ylabel("Количество наград")    # Разместить метку на оси у

# Пометить ось х названиями фильмов в центре каждого столбца
plt.xticks(range(len(movies)), movies)
plt.show()

# Столбчатый график также является хорошим вариантом выбора для построения
# гистограмм сгруппированных числовых значений с целью визуального разведывания
# характера распределения значений:
from collections import Counter
grades = [83, 95, 91, 87, 70, 0, 85, 82, 100, 67, 73, 77, 0]

# Сгруппировать оценки подецильно, но
# разместить 100 вместе с отметками 90 и выше
histogram = Counter(min(grade // 10 * 10, 90) for grade in grades)

plt.bar([x + 5 for x in histogram.keys()], # Сдвинуть столбец влево на 5
        list(histogram.values()),          # Высота столбца
        10)                                # Ширина каждого столбца 10

plt.axis([-5, 105, 0, 5])                  # Ось х от -5 до 105
                                           # ось у от 0 до 5

plt.xticks([10 * i for i in range(11)])    # Метки по оси х: 0, 10, ..., 100
plt.xlabel("Дециль")
plt.ylabel("Число студентов")
plt.title("Распределение оценок за экзамен № 1")
plt.show()
# Третий аргумент в методе plt.bar задает ширину столбцов. Здесь мы выбирали
# ширину столбцов, равную 10, заполняя весь дециль. Мы также сдвинули столбцы
# на 5 так, чтобы, например столбец "10", который соответствует децилю 10-20,
# имел свой центр в 15 и, следовательно, занимал правильный диапазон. Мы также
# добавили в каждый столбец черную обводку, чтобы сделать каждый столбец четче.

# Вызов метода plt.axis указывал на то, что мы хотим, чтобы значения меток на
# оси х варьировались в диапазоне от -5 до 105 (оставляя немного пространства
# слева и справа), а на оси у - в диапазоне от 0 до 5. Вызов метода plt.xticks
# размещает метки на оси х так: 0, 10, 20, ..., 100.

# Следует разумно использовать метод plt.axis. Во время создания столбчатых
# графиков форма оси у, которая начинается не с нуля, считается плохой,
# поскольку легко дезориентирует людей:
mentions = [500, 505]     # Упоминания
years    = [2017, 2018]   # Годы

plt.bar(years, mentions, 0.8)
plt.xticks(years)
plt.ylabel("Число раз, когда я слышал, как упоминали науку о данных")

# Если этого не сделать, matplotlib подпишет ось х как 0, 1
# и добавит +2.013е3 в правом углу (недоработка matplotlib!)
plt.ticklabel_format(useOffset=False)

# Дезориентирующая ось у показывает только то, что выше 500
plt.axis([2016.5, 2018.5, 499, 506])
plt.title("Посмотрите, какой 'огромный' прирост!")
plt.show()

plt.axis([2016.5, 2018.5, 499, 506])
plt.title("Теперь больше не такой огромный")
plt.show()

